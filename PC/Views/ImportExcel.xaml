<UserControl x:Class="PC.Views.ImportExcel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PC.Views"
             xmlns:utils="clr-namespace:PC.Utils"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button x:Name="btnSaveExcel" Content="Save" Width="80" Style="{DynamicResource SquareButtonStyle}" Margin="0 10 10 10 " Click="Save_Button_Click"></Button>
            <Button x:Name="btnDeleteExcel" Content="Delete" Width="80" Style="{DynamicResource SquareButtonStyle}" Margin="0 10 10 10 " Click="btnDeleteExcel_Click"></Button>
        </StackPanel>
        <DataGrid x:Name="pcImportDataGrid" Grid.Row="1"
                  ItemsSource="{Binding}" 
                  Margin="0,10,0,0" 
                  CanUserAddRows="False"
                  IsReadOnly="False"
                  GridLinesVisibility="All"
                  EnableRowVirtualization="True"
                  AutoGenerateColumns="False"
                  RowHeaderWidth="27"
                  HeadersVisibility="All"
                  RowDetailsVisibilityMode="VisibleWhenSelected" 
                  ColumnWidth="*" 
                  HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                  SelectionUnit="CellOrRowHeader"
                          Style="{DynamicResource AzureDataGrid}">

            <DataGrid.Resources>
                <Style x:Key="errorStyle" TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="Background" Value="Red"/>
                            <Setter Property="ToolTip" 
                                Value="{Binding RelativeSource={RelativeSource Self},
                                Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>

            <DataGrid.Columns>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.Header>
                        <CheckBox x:Name="headerCheckBox" Checked="headerCheckBox_Checked" Unchecked="headerCheckBox_Unchecked"/>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinWidth="0" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn x:Name="pC_NameColumn" Width="*" Header="Tên" Binding="{Binding PC_Name, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn x:Name="nVColumn" Width="*" Header="NV" Binding="{Binding NV, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn x:Name="nVCodeColumn" Width="*" Header="NVCode" Binding="{Binding NVCode, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn x:Name="pBColumn" Width="*" Header="PB" Binding="{Binding PB, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn x:Name="iPColumn" Width="*" Header="IP" Binding="{Binding IP, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn x:Name="mACColumn" Width="*" Header="MAC" Binding="{Binding MAC, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn x:Name="mAC2Column" Width="*" Header="MAC 2" Binding="{Binding MAC2, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn x:Name="office_LocatedColumn" Width="*" Header="Office Located" Binding="{Binding Office_Located, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn x:Name="cPUColumn" Width="*" Header="CPU" Binding="{Binding CPU, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn x:Name="hDDColumn" Width="*" Header="HDD" Binding="{Binding HDD, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn x:Name="oSColumn" Width="*" Header="OS" Binding="{Binding OS, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn x:Name="rAMColumn" Width="*" Header="RAM" Binding="{Binding RAM, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn x:Name="typeColumn" Width="*" Header="Type" Binding="{Binding Type, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn x:Name="serviceTagColumn" Width="*" Header="Service Tag" Binding="{Binding ServiceTag, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
            </DataGrid.Columns>

            <DataGrid.RowValidationRules>
                <utils:ExcelImportValidation ValidationStep="RawProposedValue"/>
            </DataGrid.RowValidationRules>

            <DataGrid.RowValidationErrorTemplate>
                <ControlTemplate>
                    <Grid ToolTip="{Binding RelativeSource={RelativeSource
                        FindAncestor, AncestorType={x:Type DataGridRow}},
                        Path=(Validation.Errors)[0].ErrorContent}">
                        <Ellipse StrokeThickness="0" Fill="Red"     
                            Width="20" 
                            Height="20" />
                        <TextBlock Text="!" FontSize="20" 
                            FontWeight="Bold" Foreground="White" 
                            HorizontalAlignment="Center"  />
                    </Grid>
                </ControlTemplate>
            </DataGrid.RowValidationErrorTemplate>
        </DataGrid>
    </Grid>
</UserControl>
