<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:utils="clr-namespace:PC.Utils"
             xmlns:DataAccess="clr-namespace:PC.DataAccess" x:Class="PC.Views.AllPC"
             xmlns:ViewModels="clr-namespace:PC.ViewModels"

    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
    mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="1000" Loaded="UserControl_Loaded">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0">
            <DockPanel.Resources>
                <Style x:Key="CustomMetroToggleSwitchButton"
                       BasedOn="{StaticResource MahApps.Metro.Styles.ToggleSwitchButton}"
                       TargetType="{x:Type Controls:ToggleSwitchButton}">
                    <Setter Property="SwitchForeground" Value="YellowGreen" />
                </Style>
            </DockPanel.Resources>
            <Controls:ToggleSwitch Margin="10 5 0 0"
                                   x:Name="btn_toggle_edit"
                                   Header="Edit Mode"
                                   IsChecked="False"
                                   ToggleSwitchButtonStyle="{StaticResource CustomMetroToggleSwitchButton}" 
                                   Checked="BtnEditChecked" Unchecked="BtnEditUnchecked"/>

            <Button Grid.Row="0" x:Name="BtnUpdate" Content="Update"
                Width="100" HorizontalContentAlignment="Center"
                Margin="10 15 0 15"
                Style="{DynamicResource SquareButtonStyle}"
                Visibility="Hidden" Click="BtnUpdateClicked"/>

            <Button Grid.Row="0" x:Name="BtnDelete" Content="Delete"
                Width="100" HorizontalContentAlignment="Center" Click="BtnDeleteClicked"
                Margin="10 15 0 15"
                Style="{DynamicResource SquareButtonStyle}"
                Visibility="Hidden"/>


            <Button x:Name="BtnExport" Grid.Row="0" Content="Export to Excel File"
                    HorizontalContentAlignment="Center" HorizontalAlignment="Right" Margin="10 15 10 15"
                    Style="{DynamicResource SquareButtonStyle}" Click="BtnExport_Click" />
        </DockPanel>
        <DockPanel Grid.Row="1" HorizontalAlignment="Left">
            <ComboBox Grid.Row="1" x:Name="filter_options" Margin="10 15 0 15" Width="106" SelectedIndex="0"
                      SelectionChanged="filter_options_SelectionChanged" DropDownClosed="filter_options_DropDownClosed"></ComboBox>
            <TextBox Grid.Row="1" x:Name="txt_filter_value" Margin="10 15 0 15" Width="200" KeyDown="txt_filter_value_KeyDown"/>
            <ComboBox Grid.Row="1" x:Name="office_locations" Margin="10 15 0 15" Width="200" Visibility="Collapsed"
                      SelectionChanged="office_locations_SelectionChanged"></ComboBox>
        </DockPanel>
        <DataGrid x:Name="pcDataGrid" 
                  Grid.Row="2"
                  ItemsSource="{Binding}" 
                  Margin="0,10,0,0" 
                  CanUserAddRows="False"
                  IsReadOnly="True"
                  GridLinesVisibility="All"
                  EnableRowVirtualization="True"
                  EnableColumnVirtualization="True"
                  AutoGenerateColumns="False"
                  RowHeaderWidth="27"
                  HeadersVisibility="All"
                  RowDetailsVisibilityMode="VisibleWhenSelected" 
                  RowEditEnding="PcViewSource_RowEditEnding"
                  SelectionUnit="CellOrRowHeader">

            <DataGrid.Resources>
                <Style x:Key="errorStyle" TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="Background" Value="Red"/>
                            <Setter Property="ToolTip" 
                                Value="{Binding RelativeSource={RelativeSource Self},
                                Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Trigger>
                    </Style.Triggers>
                    <Setter Property="TextWrapping" Value="Wrap" />
                    <EventSetter Event="KeyDown" Handler="OnTextBoxKeyDown"/>
                </Style>
            </DataGrid.Resources>

            <DataGrid.Columns>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.Header>
                        <CheckBox x:Name="headerCheckBox" Checked="headerCheckBox_Checked" Unchecked="headerCheckBox_Unchecked"/>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MinWidth="0" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Width="Auto" x:Name="pC_NameColumn"  Header="Tên" Binding="{Binding PC_Name, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn Width="Auto" x:Name="nVColumn"  Header="NV" Binding="{Binding NV, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn Width="Auto" x:Name="nVCodeColumn"  Header="NVCode" Binding="{Binding NVCode, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn Width="Auto" x:Name="pBColumn"  Header="PB" Binding="{Binding PB, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn Width="Auto" x:Name="iPColumn"  Header="IP" Binding="{Binding IP, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn Width="Auto" x:Name="mACColumn"  Header="MAC" Binding="{Binding MAC, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn Width="Auto" x:Name="mAC2Column"  Header="MAC 2" Binding="{Binding MAC2, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn Width="Auto" x:Name="office_LocatedColumn"  Header="Office Located" Binding="{Binding Office_Located, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn Width="Auto" x:Name="cPUColumn"  Header="CPU" Binding="{Binding CPU, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn Width="Auto" x:Name="hDDColumn"  Header="HDD" Binding="{Binding HDD, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn Width="Auto" x:Name="oSColumn"  Header="OS" Binding="{Binding OS, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn Width="Auto" x:Name="rAMColumn"  Header="RAM" Binding="{Binding RAM, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn Width="Auto" x:Name="typeColumn"  Header="Type" Binding="{Binding Type, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn Width="Auto" x:Name="serviceTagColumn"  Header="Service Tag" Binding="{Binding ServiceTag, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Width="Auto" x:Name="modelColumn"  Header="Model" Binding="{Binding Model, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn Width="Auto" x:Name="mouseColumn"  Header="Mouse" Binding="{Binding Mouse, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn Width="Auto" x:Name="keyboardColumn"  Header="Keyboard" Binding="{Binding KeyBoard, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
                <DataGridTextColumn Width="Auto" x:Name="notesColumn"  Header="Notes" Binding="{Binding Notes, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource errorStyle}"/>
            </DataGrid.Columns>

            <DataGrid.RowValidationRules>
                <utils:PcValidation ValidationStep="UpdatedValue"/>
            </DataGrid.RowValidationRules>

            <DataGrid.RowValidationErrorTemplate>
                <ControlTemplate>
                    <Grid ToolTip="{Binding RelativeSource={RelativeSource
                        FindAncestor, AncestorType={x:Type DataGridRow}},
                        Path=(Validation.Errors)[0].ErrorContent}">
                        <Ellipse StrokeThickness="0" Fill="Red"     
                            Width="20" 
                            Height="20" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <TextBlock Text="!" FontSize="20" 
                            FontWeight="Bold" Foreground="White" 
                            HorizontalAlignment="Center"  VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </DataGrid.RowValidationErrorTemplate>
        </DataGrid>

    </Grid>
</UserControl>
